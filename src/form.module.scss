$breakpoints: (
  "xs": 0px,
  "sm": 600px,
  "md": 900px,
  "lg": 1200px,
  "xl": 1536px,
);

@mixin text {
  font-size: 1rem;
  color: #374151;
}

@mixin text-dark {
  color: #e5e7eb;
}

.mb {
  margin-bottom: 0.5rem;
}

.relative {
  position: relative;
}

.flex {
  display: flex;
  align-items: center;
  // flex-wrap: wrap;
}

.inlineFlex {
  display: inline-flex;
  align-items: center;
}

.flexWrap {
  flex-wrap: wrap;
}

.field {
  display: block;
}

.label {
  display: inline-block;
  cursor: pointer;
  @include text;

  .required {
    padding-left: 0.25rem;
  }
}

.errorMessage {
  margin-top: 0.5rem;
  width: 100%;
  color: #f87171;
  font-size: 0.75rem;
  font-style: italic;
}

@mixin placeholder {
  &::placeholder {
    color: #666;
  }
}

@mixin input {
  appearance: none;
  outline: none;
  background-color: #e5e7eb;
  border: 1px solid #6b7280;
  color: #1f2937;
  transition: background 0.5s;
}

@mixin input-dark {
  background-color: #1a1a1a;
  color: #fff;

  &:has(input:focus),
  &:hover:not(&:disabled),
  &:focus,
  &:checked {
    border-color: #d1d5db;
  }

  &:has(input:focus),
  &:focus,
  &:checked {
    background-color: #000;
  }
}

.labelInput {
  @include input;
  display: flex;
  align-items: center;
  width: 100%;

  border-radius: 0.25rem;
  cursor: text;

  input {
    appearance: none;
    width: 100%;
    font-size: 1rem;
    line-height: 1.5;
    padding: 0.25rem 0.75rem;
    outline: none;
    background: none;
    border: none;
    @include placeholder;
  }

  .start,
  .end {
    display: flex;
    align-items: center;
  }

  .start {
    margin: 0 -0.25rem 0 0.5rem;
  }
  .end {
    margin: 0 0.5rem 0 -0.25rem;
  }
}

.input,
.textArea {
  @include input;
  display: block;
  width: 100%;
  font-size: 1rem;
  line-height: 1.5;
  padding: 0.25rem 0.75rem;
  // line-height: 1.25;

  border-radius: 0.25rem;

  &:focus {
    background-color: #ffffff;
    border-color: #111827;
  }
}

/*
.iconRight {
  position: absolute;
  // top: 50%;
  top: 0;
  bottom: 0;
  right: 0.75rem;
  margin: auto;
  // transform: translateY(-50%);
}

.hasIconRight {
  padding-right: 2.75rem;
}
*/

.radioList {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.radioRow {
}
@each $breakpoint, $width in $breakpoints {
  @media (min-width: $width) {
    .radioRow#{$breakpoint} {
      display: flex;
      gap: 1.5rem;
      list-style-type: none;
      padding: 0;
      margin: 0;
    }
  }
}

.checkbox,
.radio {
  position: relative;
  display: flex;
  padding: 0.4rem;
  margin: -0.4rem;
  align-items: center;
  border-radius: 9999px;
  cursor: pointer;

  input {
    @include input;
    position: relative;
    height: 1.25rem;
    width: 1.25rem;
    transition: all;
    cursor: pointer;
    border-radius: 0.125rem;
  }

  input:checked + span {
    opacity: 1;
  }

  span {
    position: absolute;
    color: white;
    transition: opacity 0.3s;
    opacity: 0;
    pointer-events: none;
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);

    /*
    svg {
      width: 0.875rem;
      height: 0.875rem;
    }
    */
  }
}

.checkbox + .label,
.radio + .label {
  margin-left: 0.75rem;
}

.radio {
  input {
    border-radius: 100%;
  }

  span svg {
    width: 0.75rem;
    height: 0.75rem;
  }
}

@mixin dark {
  .label {
    @include text-dark;
  }
  .input,
  .textArea {
    @include input-dark;
  }
  .labelInput {
    @include input-dark;
  }

  .checkbox input {
    @include input-dark;
  }
  .radio input {
    @include input-dark;
  }
}

:global {
  .system {
  }
  .dark {
  }
}

:global(.dark) {
  @include dark;
}

@media (prefers-color-scheme: dark) {
  :global(.system) {
    @include dark;
  }
}
